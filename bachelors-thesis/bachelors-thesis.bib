@techreport{moeller_radix,
  author      = {Ralf M\"oller},
  title       = {Bitwise MSB Radix Sort on AVX-512},
  year        = {2021},
  institution = {Bielefeld University, Faculty of Technology, Computer Engineering Group},
  url         = {https://www.ti.uni-bielefeld.de/html/people/moeller/DOCUMENTS/simdRadixSort.pdf}
}

@book{knuth_taocp,
  author    = {Knuth, Donald E.},
  title     = {The Art of Computer Programming, Volume 3: (2nd Ed.) Sorting and Searching},
  year      = {1998},
  isbn      = {0201896850},
  publisher = {Addison Wesley Longman Publishing Co., Inc.},
  address   = {USA}
}

@techreport{moeller_tsimd,
  author      = {Ralf M\"oller},
  title       = {Design of a low-level C++ template SIMD library},
  year        = {2016},
  institution = {Bielefeld University, Faculty of Technology, Computer Engineering Group},
  url         = {https://www.ti.uni-bielefeld.de/html/people/moeller/DOCUMENTS/templateSIMD.pdf}
}

@misc{intel_intrinsics_guide,
  organization = {Intel Corporation},
  title        = {Intel® Intrinsics Guide},
  url          = {https://software.intel.com/sites/landingpage/IntrinsicsGuide/},
  note         = {(Retrieved July 14, 2022)}
}

@misc{intel_ipp,
  organization = {Intel Corporation},
  title        = {Intel® Integrated Performance Primitives. Part of Intel oneAPI Toolkits.},
  url          = {https://software.intel.com/en-us/intel-ipp}
}

@misc{intel_aos,
  organization = {Intel Corporation},
  title        = {How to Manipulate Data Structure to Optimize Memory Use on 32-Bit Intel® Architecture},
  year         = {2012},
  url          = {https://www.intel.com/content/www/us/en/developer/articles/technical/how-to-manipulate-data-structure-to-optimize-memory-use-on-32-bit-intel-architecture.html},
  note         = {(Retrieved July 14, 2022)}
}

@misc{intel_avx_512,
  organization = {Intel Corporation},
  title        = {Intel® AVX-512 Instructions},
  year         = {2013},
  url          = {https://www.intel.com/content/www/us/en/developer/articles/technical/intel-avx-512-instructions.html},
  note         = {(Retrieved July 14, 2022)}
}

@misc{intel-manual,
  organization = {Intel Corporation},
  title        = {Intel® 64 and IA-32 Architectures Software Developer's Manual Volume 2},
  year         = {2022},
  url          = {https://www.intel.com/content/www/us/en/developer/articles/technical/intel-sdm.html},
  note         = {(Retrieved July 14, 2022)}
}

@article{bramas,
  title     = {A Novel Hybrid Quicksort Algorithm Vectorized using AVX-512 on Intel Skylake},
  journal   = {International Journal of Advanced Computer Science and Applications},
  url       = {http://dx.doi.org/10.14569/IJACSA.2017.081044},
  year      = {2017},
  publisher = {The Science and Information Organization},
  volume    = {8},
  number    = {10},
  author    = {Berenger Bramas}
}

@inproceedings{blacher,
  publisher = {Schloss Dagstuhl {---} Leibniz-Zentrum f{\"u}r Informatik},
  author    = {Mark Blacher and Joachim Giesen and Lars K{\"u}hne},
  journal   = {19th International Symposium on Experimental Algorithms (SEA 2021)},
  volume    = {190},
  series    = {Leibniz International Proceedings in Informatics (LIPIcs)},
  pages     = {3:1--3:16},
  month     = {Juni},
  booktitle = {19th International Symposium on Experimental Algorithms (SEA 2021)},
  year      = {2021},
  title     = {Fast and Robust Vectorized In-Place Sorting of Primitive Types},
  keywords  = {Quicksort, Sorting Networks, Vectorization, SIMD, AVX2},
  url       = {https://elib.dlr.de/142624/}
}

@thesis{blacher_using_avx512_thiemicke,
  school   = {Friedrich-Schiller Universit{\"a}t Jena},
  author   = {Frank Thiemicke and Mark Blacher and Lars K{\"u}hne},
  type     = {Bachelorarbeit},
  title    = {Implementation of a vectorized Quicksort using AVX-512 intrinsics},
  year     = {2021},
  month    = {August},
  url      = {https://elib.dlr.de/145402/},
  keywords = {Sortieren, Quicksort, Vektorisieren, AVX}
}

@misc{cs241_sorting,
  author      = {Daisy Tang},
  title       = {CS241 -- Lecture Notes: Sorting Algorithm},
  year        = {2012},
  institution = {California State Polytechnic University, Pomona},
  url         = {https://www.cpp.edu/~ftang/courses/CS241/notes/sorting.htm},
  note        = {(Retrieved July 14, 2022)}
}

@book{cpp_templates,
  author    = {David Vandevoorde and Nicolai M. Josuttis and Douglas Gregor},
  publisher = {Addison-Wesley},
  title     = {C++ Templates - The Complete Guide, 2nd Edition},
  year      = {2017}
}

@book{illiac_iv,
  author    = {R. Michael Hord},
  publisher = {Springer-Verlag Berlin Heidelberg},
  title     = {The Illiac IV: The First Supercomputer},
  year      = {1982},
  isbn      = {9783662103456}
}

@article{flynn,
  author  = {Flynn, Michael},
  year    = {1967},
  month   = {01},
  pages   = {1901 - 1909},
  title   = {Very High-Speed Computing Systems},
  volume  = {54},
  journal = {Proceedings of the IEEE},
  url     = {http://doi.org/10.1109/PROC.1966.5273}
}

@article{washingtonpost_mmx,
  author  = {Rajiv Ch and rasekaran},
  url     = {https://www.washingtonpost.com/archive/business/1997/01/08/intel-to-unveil-faster-pentium-chip/9d6bdbd2-51b0-4a56-b24a-f4b1ee8b795e/},
  title   = {Intel to unveil faster Pentium chip},
  year    = {1997},
  journal = {The Washington Post},
  note    = {(Retrieved July 14, 2022)}
}

@misc{enwiki:mmx,
  author = {{Wikipedia contributors}},
  title  = {MMX (instruction set) --- {Wikipedia}{,} The Free Encyclopedia},
  year   = {2022},
  url    = {https://en.wikipedia.org/w/index.php?title=MMX_(instruction_set)&oldid=1067835148},
  note   = {(Retrieved July 14, 2022)}
}

@misc{enwiki:sse,
  author = {{Wikipedia contributors}},
  title  = {Streaming SIMD Extensions --- {Wikipedia}{,} The Free Encyclopedia},
  year   = {2022},
  url    = {https://en.wikipedia.org/w/index.php?title=Streaming_SIMD_Extensions&oldid=1088269872},
  note   = {(Retrieved July 14, 2022)}
}

@misc{enwiki:avx,
  author = {{Wikipedia contributors}},
  title  = {Advanced Vector Extensions --- {Wikipedia}{,} The Free Encyclopedia},
  year   = {2022},
  url    = {https://en.wikipedia.org/w/index.php?title=Advanced_Vector_Extensions&oldid=1097298131},
  note   = {(Retrieved July 14, 2022)}
}

@misc{enwiki:sorting_network,
  author = {{Wikipedia contributors}},
  title  = {Sorting network --- {Wikipedia}{,} The Free Encyclopedia},
  year   = {2022},
  url    = {https://en.wikipedia.org/w/index.php?title=Sorting_network&oldid=1063325047},
  note   = {(Retrieved July 14, 2022)}
}

@misc{enwiki:stl_sort,
  author = {{Wikipedia contributors}},
  title  = {Sort (C++) --- {Wikipedia}{,} The Free Encyclopedia},
  year   = {2022},
  url    = {https://en.wikipedia.org/w/index.php?title=Sort_(C%2B%2B)&oldid=1070273046},
  note   = {(Retrieved July 14, 2022)}
}

@article{gcc-wiki-dont-use-inline-assembly,
  author  = {DavidWohlferd},
  journal = {{GCC Wiki}},
  title   = {Reasons you should NOT use inline asm},
  year    = {2016},
  url     = {https://gcc.gnu.org/wiki/DontUseInlineAsm},
  note    = {(Retrieved July 14, 2022)}
}

@article{fast_quicksort_gueron_krasnov,
  author   = {Gueron, Shay and Krasnov, Vlad},
  title    = {{Fast Quicksort Implementation Using AVX Instructions}},
  journal  = {The Computer Journal},
  volume   = {59},
  number   = {1},
  pages    = {83-90},
  year     = {2015},
  month    = {08},
  abstract = {{This article describes a technique for implementing the quicksort sorting algorithm. Our method ‘vectorizes’ the computations and leverages the capabilities of the advanced vector extensions (AVX) instructions, available on Intel Core processors, and of the AVX2 instructions that were introduced with Intel's recent architecture codename Haswell. Our solution offers several advantages when compared with other high-performance sorting implementations, such as the radix sort, as implemented in Intel IPP library, or the introsort, as implemented in the \\$\\hbox \\{C\\}\\{++\\}\\$ STL. In addition to sorting numeric arrays, our method can also be used to sort complex structures with numeric keys and even pointers to such structures.}},
  issn     = {0010-4620},
  url      = {https://doi.org/10.1093/comjnl/bxv063},
  eprint   = {https://academic.oup.com/comjnl/article-pdf/59/1/83/7902681/bxv063.pdf}
}

@inproceedings{radix_cray_y-mp,
  author    = {Zagha, Marco and Blelloch, Guy E.},
  title     = {Radix Sort for Vector Multiprocessors},
  year      = {1991},
  isbn      = {0897914597},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/125826.126164},
  booktitle = {Proceedings of the 1991 ACM/IEEE Conference on Supercomputing},
  pages     = {712–721},
  numpages  = {10},
  location  = {Albuquerque, New Mexico, USA},
  series    = {Supercomputing '91}
}

@inproceedings{first_bitonic_sort,
  author    = {Batcher, K. E.},
  title     = {Sorting Networks and Their Applications},
  year      = {1968},
  isbn      = {9781450378970},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1468075.1468121},
  abstract  = {To achieve high throughput rates today's computers perform several operations simultaneously. Not only are I/O operations performed concurrently with computing, but also, in multiprocessors, several computing operations are done concurrently. A major problem in the design of such a computing system is the connecting together of the various parts of the system (the I/O devices, memories, processing units, etc.) in such a way that all the required data transfers can be accommodated. One common scheme is a high-speed bus which is time-shared by the various parts; speed of available hardware limits this scheme. Another scheme is a cross-bar switch or matrix; limiting factors here are the amount of hardware (an m \texttimes{} n matrix requires m \texttimes{} n cross-points) and the fan-in and fan-out of the hardware.},
  booktitle = {Proceedings of the April 30--May 2, 1968, Spring Joint Computer Conference},
  pages     = {307–314},
  numpages  = {8},
  location  = {Atlantic City, New Jersey},
  series    = {AFIPS '68 (Spring)}
}

@article{simd_bitonic_sort,
  author     = {Siegel, Howard Jay},
  title      = {The Universality of Various Types of SIMD Machine Interconnection Networks},
  year       = {1977},
  issue_date = {March 1977},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {5},
  number     = {7},
  issn       = {0163-5964},
  url        = {https://doi.org/10.1145/633615.810655},
  journal    = {SIGARCH Comput. Archit. News},
  month      = {mar},
  pages      = {70–79},
  numpages   = {10}
}


@article{levin_vectorized_quicksort,
  title    = {A fully vectorized quicksort},
  journal  = {Parallel Computing},
  volume   = {16},
  number   = {2},
  pages    = {369-373},
  year     = {1990},
  issn     = {0167-8191},
  url      = {https://doi.org/10.1016/0167-8191(90)90074-J},
  author   = {Stewart A Levin},
  keywords = {Odd-even transpositions, Partition, Quicksort, Sort, Sorting network, Vectorize},
  abstract = {Sorting and related operations, such as finding percentiles, are traditional computer applications. For in-core sortng. Quicksort is usually the method of choice as it is efficient, compactly coded, and easily understood. This communication shows how one can fully vectorize Quicksort and thereby preserve its efficiency on vector computers such as Cray and Convex machines.}
}

@book{intro_to_algorithms,
  author    = {Thomas H. Cormen and Charles E. Leiserson and Ronald L. Rivest and Clifford Stein},
  title     = {Introduction to Algorithms},
  publisher = {MIT Press},
  year      = {2009},
  edition   = {3rd},
  isbn      = {9780262033848}
}

@misc{float_radix_sort,
  author = {Michael Herf},
  title  = {Radix Tricks},
  year   = {2001},
  url    = {http://stereopsis.com/radix.html},
  note   = {(Retrieved July 14, 2022)}
}

@book{alg_design_manual,
  author    = {Steven S. Skiena},
  title     = {The Algorithm Design Manual},
  publisher = {Springer London},
  year      = {2008},
  edition   = {2nd},
  isbn      = {978-1-84800-070-4},
  url       = {https://doi.org/10.1007/978-1-84800-070-4}
}

@article{avx-512-fused-off,
  author  = {Paul Alcorn},
  title   = {Intel Nukes Alder Lake's AVX-512 Support, Now Fuses It Off in Silicon},
  year    = {2022},
  url     = {https://www.tomshardware.com/news/intel-nukes-alder-lake-avx-512-now-fuses-it-off-in-silicon},
  note    = {(Retrieved July 14, 2022)},
  journal = {Tom's Hardware}
}
